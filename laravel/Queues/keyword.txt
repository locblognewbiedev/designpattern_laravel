=> khi cần tối ưu hãy nghiên cứu file này

Tổng quan về Queue
Queue: Hệ thống quản lý các công việc nền, giúp xử lý các tác vụ dài một cách không đồng bộ.
Driver: Laravel hỗ trợ nhiều driver Queue như database, Redis, Beanstalkd, Amazon SQS, v.v.
Config Queue: File cấu hình Queue nằm trong config/queue.php.
Jobs
Job Class: Được sử dụng để định nghĩa các tác vụ sẽ được xử lý trong Queue.
Tạo Job: Sử dụng Artisan command php artisan make:job JobName.
Dispatch Job: Đẩy Job vào Queue bằng phương thức dispatch.
Sử dụng Interface: Implements ShouldQueue interface để một Job được xử lý trong Queue.
Tham số Job: Bạn có thể truyền dữ liệu vào Job qua constructor.
Phương thức handle: Logic xử lý công việc được định nghĩa trong phương thức handle.
Queue Workers
Chạy Worker: Sử dụng Artisan command php artisan queue:work để chạy Worker.
Chạy Worker Daemon: Sử dụng --daemon flag để Worker chạy liên tục.
Queue
: Dùng queue:listen để lắng nghe và xử lý công việc (không khuyến khích).
Chạy Worker nền: Sử dụng Supervisor để chạy Workers dưới dạng nền trên Linux.
Queue Driver
Database Driver: Lưu công việc trong bảng database.
Redis Driver: Sử dụng Redis để lưu và quản lý các công việc.
Beanstalkd Driver: Sử dụng Beanstalkd để xử lý các công việc nền.
Amazon SQS Driver: Sử dụng Amazon SQS để lưu và quản lý các công việc.
Queue Configurations
Default Queue: Định nghĩa Queue mặc định trong file queue.php.
Queue Connections: Cấu hình nhiều kết nối Queue trong queue.php.
Queue Prefix: Thêm prefix cho tên Queue trong Redis bằng prefix trong cấu hình Redis.
Queue Timeout: Định nghĩa thời gian chờ xử lý công việc trong queue.php.
Job Retry and Failures
Retry Job: Định nghĩa số lần retry một Job bằng thuộc tính tries.
Delay Job: Định nghĩa thời gian chờ trước khi retry Job bằng thuộc tính retryAfter.
Job Timeout: Định nghĩa thời gian tối đa cho một Job bằng thuộc tính timeout.
Failed Jobs: Laravel lưu trữ các công việc thất bại trong bảng failed_jobs.
Managing Queues
Queue Priorities: Định nghĩa độ ưu tiên cho các Queue.
Queue Aliases: Sử dụng tên khác cho Queue trong cấu hình queue.php.
Chạy Worker trên Queue cụ thể: Sử dụng --queue flag để chỉ định Queue cụ thể khi chạy Worker.
Queue Monitor: Giám sát Queue và xử lý sự cố kịp thời.
Events
Queue Events: Laravel hỗ trợ nhiều sự kiện Queue như JobProcessing, JobProcessed, JobFailed.
Đăng ký Event Listener: Đăng ký các Listener cho các sự kiện Queue trong EventServiceProvider.
Custom Event Listener: Tạo các Listener tùy chỉnh cho các sự kiện Queue.
Job Middleware
Job Middleware: Định nghĩa logic được chạy trước hoặc sau khi Job được xử lý.
Creating Middleware: Tạo Middleware cho Job bằng Artisan command.
Middleware handle Method: Logic Middleware được định nghĩa trong phương thức handle.
Batch Processing
Job Batches: Laravel hỗ trợ xử lý các công việc theo lô (batch).
Creating Job Batches: Sử dụng Bus::batch để tạo batch.
Batch Callbacks: Định nghĩa các callback cho batch như then, catch, finally.
Advanced Queue Features
Throttling Jobs: Giới hạn số lượng Job được xử lý trong một khoảng thời gian.
Rate Limiting: Sử dụng rate limiting để kiểm soát tốc độ xử lý Job.
Job Chaining: Kết nối các Job để chúng chạy tuần tự.
Job Dispatch Conditions: Định nghĩa điều kiện để dispatch một Job.
Maintenance
Clearing Queues: Sử dụng Artisan command queue:clear để xóa Queue.
Retrying Failed Jobs: Sử dụng Artisan command queue:retry để retry các công việc thất bại.
Forgetting Failed Jobs: Sử dụng Artisan command queue:forget để quên các công việc thất bại.
Flushing Failed Jobs: Sử dụng Artisan command queue:flush để xóa tất cả các công việc thất bại.
Security
Queue Encryption: Mã hóa dữ liệu Queue để bảo mật.
Job Dependencies: Xác định các Job phụ thuộc lẫn nhau.
Optimization
Optimizing Worker Memory: Giới hạn bộ nhớ sử dụng bởi Worker bằng thuộc tính memory.
Optimizing Queue Processing: Sử dụng nhiều Worker để tối ưu xử lý Queue